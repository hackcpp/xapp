using Microsoft.AspNetCore.Mvc;
using Oracle.ManagedDataAccess.Client;

namespace test.Controllers
{
    public class OracleController : BaseDbController
    {
        public OracleController(IConfiguration config, ILogger<OracleController> logger)
            : base(config, logger)
        {
        }

        protected override string GetConnectionString(IConfiguration config)
        {
            var connectionString = config.GetConnectionString("OracleConnection");
            if (string.IsNullOrEmpty(connectionString))
            {
                throw new InvalidOperationException("Oracle connection string is not configured");
            }
            return connectionString;
        }

        public IActionResult Index()
        {
            return View();
        }

        public async Task<IActionResult> TestManagedDataAccessAsync()
        {
            var results = new List<string>();
            try
            {
                using (var connection = new OracleConnection(_connectionString))
                {
                    await connection.OpenAsync();
                    results.Add("Oracle 数据库连接成功");
                    results.Add($"数据库版本: {connection.ServerVersion}");

                    // 获取实例信息
                    using (var cmd = connection.CreateCommand())
                    {
                        cmd.CommandText = "SELECT instance_name, status, version FROM v$instance";
                        using (var reader = await cmd.ExecuteReaderAsync())
                        {
                            if (await reader.ReadAsync())
                            {
                                results.Add($"实例名称: {reader["instance_name"]}");
                                results.Add($"状态: {reader["status"]}");
                                results.Add($"版本: {reader["version"]}");
                            }
                        }
                    }

                    // CRUD测试
                    results.Add("\nCRUD操作测试:");

                    // 创建测试表
                    var createTableSql = @"
                        DECLARE
                            table_exists NUMBER;
                        BEGIN
                            SELECT COUNT(*) INTO table_exists FROM user_tables WHERE table_name = 'TEST_USERS';
                            IF table_exists = 0 THEN
                                EXECUTE IMMEDIATE '
                                CREATE TABLE test_users (
                                    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                                    name VARCHAR2(50) NOT NULL,
                                    email VARCHAR2(100) NOT NULL,
                                    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
                                )';
                            END IF;
                        END;";
                    using (var cmd = new OracleCommand(createTableSql, connection))
                    {
                        await cmd.ExecuteNonQueryAsync();
                        results.Add("创建测试表成功");
                    }

                    // 插入数据
                    var insertSql = "INSERT INTO test_users (name, email) VALUES (:name, :email)";
                    using (var cmd = new OracleCommand(insertSql, connection))
                    {
                        cmd.Parameters.Add(new OracleParameter("name", "Test User"));
                        cmd.Parameters.Add(new OracleParameter("email", "test@example.com"));
                        var rows = await cmd.ExecuteNonQueryAsync();
                        results.Add($"插入数据成功，影响行数: {rows}");
                    }

                    // 查询数据
                    var selectSql = "SELECT * FROM test_users ORDER BY id DESC FETCH FIRST 1 ROWS ONLY";
                    using (var cmd = new OracleCommand(selectSql, connection))
                    {
                        using (var rdr = await cmd.ExecuteReaderAsync())
                        {
                            while (await rdr.ReadAsync())
                            {
                                results.Add($"查询到数据: ID={rdr["id"]}, Name={rdr["name"]}, Email={rdr["email"]}");
                            }
                        }
                    }

                    // 清理测试表
                    var dropTableSql = @"
                        DECLARE
                            table_exists NUMBER;
                        BEGIN
                            SELECT COUNT(*) INTO table_exists FROM user_tables WHERE table_name = 'TEST_USERS';
                            IF table_exists > 0 THEN
                                EXECUTE IMMEDIATE 'DROP TABLE test_users';
                            END IF;
                        END;";
                    using (var cmd = new OracleCommand(dropTableSql, connection))
                    {
                        await cmd.ExecuteNonQueryAsync();
                        results.Add("清理测试表成功");
                    }
                }
            }
            catch (Exception ex)
            {
                results.Add($"Oracle 测试失败: {ex.Message}");
                _logger.LogError(ex, "Oracle test failed");
            }

            ViewBag.Results = results;
            return View("TestResults");
        }
    }
}
